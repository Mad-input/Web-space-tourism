---
import Layout from "../layouts/Layout.astro";
import LayoutPage from "../layouts/LayoutPage.astro";
---

<Layout title="Destination" pageId={2}>
  <LayoutPage title="Pick Your Destination" id={1}>
    <div class="info-destination">
      <div class="container-img">
        <img
          src="/assets/destination/image-moon.webp"
          alt="moon"
          id="imgHTML"
        />
      </div>

      <div class="options-destination">
        <ul class="list-destination">
          <li class=`item-list-destination` data-id="0">Moon</li>
          <li class=`item-list-destination` data-id="1">Mars</li>
          <li class=`item-list-destination` data-id="2">Europa</li>
          <li class=`item-list-destination` data-id="3">Titan</li>
        </ul>
        <h2 id="titleDestination"></h2>
        <p id="descriptionDestination"></p>
        <span class="spa"></span>
        <div class="statistics">
          <div>
            <div class="title-span">AVG. Distance</div>
            <span class="distance" id="distance"></span>
          </div>
          <div>
            <div class="title-span">EST. Travel Time</div>
            <span class="distance" id="travel"></span>
          </div>
        </div>
      </div>
    </div>
  </LayoutPage>
</Layout>

<style>
  body {
    background:
      linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)),
      url("/assets/destination/img1.noche_estrellada.webp") no-repeat;
    background-size: cover;
  }

  .info-destination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 9.8125rem;
    margin: 5rem;

    .container-img {
      img {
        animation: fadeIn 0.5s linear;
        width: 25rem;
      }
    }

    .options-destination {
      width: 28.125rem;
      .list-destination {
        margin-bottom: 3.125rem;

        .item-list-destination {
          list-style: none;
          display: inline-block;
          margin-right: 2.1875rem;
          padding: 0.75rem 0;
          font-size: 1rem;
          text-transform: uppercase;
          color: var(--second-text);
          letter-spacing: 0.1688rem;
          position: relative;
          cursor: pointer;

          &::before {
            content: "";
            display: none;
            position: absolute;
            bottom: 0;
            width: 100%;
            height: 0.1875rem;
            background: #fff;
          }

          &.active::before {
            display: inline-block;
          }

          &:hover::before {
            display: inline-block;
            background: rgba(255, 255, 255, 0.3);
          }

          &.active {
            color: #fff;
          }
        }
      }

      #titleDestination {
        font-size: 6.25rem;
        color: #fff;
        font-weight: normal;
        font-family: var(--font-two);
        margin-bottom: 1.25rem;
      }
      #descriptionDestination {
        font-size: 1.125rem;
        color: var(--second-text);
        font-family: var(--font);
        line-height: 2;
        margin-bottom: 2.1875rem;
        letter-spacing: 0.0313rem;
      }

      .spa {
        display: inline-block;
        width: 100%;
        height: 0.0625rem;
        background: rgba(255, 255, 255, 0.3);
      }

      .statistics {
        display: flex;
        gap: 5rem;
        div {
          display: inline-block;
          margin-top: 0.625rem;
          .title-span {
            font-weight: normal;
            font-size: 0.9375rem;
            color: var(--second-text);
            margin-bottom: 0.9375rem;
          }
          .distance {
            display: block;
            font-weight: normal;
            font-family: var(--font-two);
            font-size: 1.75rem;
            color: #fff;
          }
        }
      }
    }
  }

  @media screen and (max-width: 768px) {
    body {
      background-image: url("/assets/destination/background-destination-tablet.jpg");
    }

    .info-destination {
      flex-direction: column;
      gap: 20px;
    }
  }
</style>

<script>
  import data from "../data.json";
  const renderInfoInHTML = (id: number, category: string) => {
    // Penticion para recuperar la informacion del archivo data.json
    const info = data[category];
    let newInfo = info[id];
    // Seleccionar elementos HTML Necesarios
    const $imgContainer = document.querySelector(".container-img"),
      $title = document.getElementById("titleDestination"),
      $description = document.getElementById("descriptionDestination"),
      $distance = document.getElementById("distance"),
      $travel = document.getElementById("travel"),
      img = document.createElement("img");
    img.setAttribute("src", newInfo.images.webp);
    img.id = "imgHTML";
    img.alt = newInfo.description.split(" ", 4);

    // Cargar la informacion en los elementos HTML
    $imgContainer.innerHTML = "";
    $imgContainer.append(img);
    $title.innerText = newInfo.name.toUpperCase();
    $description.innerText = newInfo.description;
    $distance.innerText = newInfo.distance.toUpperCase();
    $travel.innerText = newInfo.travel.toUpperCase();
    //Guardar la selección en localStorage
    localStorage.setItem("id", JSON.stringify(id));
  };

  // Recuperar el id en localStorage para no peder la selección
  const idLocal = localStorage.getItem("id") ?? 0;
  renderInfoInHTML(+idLocal, "destinations");
  //
  const items = Array.from(document.querySelectorAll(".item-list-destination"));
  //
  items.forEach((item: HTMLElement) => {
    item.addEventListener("click", (e) => {
      const { currentTarget } = e;

      // eliminar clase active al elmento que lo contenga
      document
        .querySelector(".item-list-destination.active")
        .classList.remove("active");

      currentTarget.classList.add("active");
      renderInfoInHTML(Number(item.dataset.id), "destinations");
    });
    // agregar clase item al elmento si existe en el localStorage
    if (item.dataset.id === idLocal) item.classList.add("active");
  });
</script>
